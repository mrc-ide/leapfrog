// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// leapfrogR
Rcpp::List leapfrogR(const Rcpp::List& demp, const Rcpp::List& projp, const Rcpp::String hiv_strat, const int hiv_steps_per_year);
RcppExport SEXP _leapfrog_leapfrogR(SEXP dempSEXP, SEXP projpSEXP, SEXP hiv_stratSEXP, SEXP hiv_steps_per_yearSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type demp(dempSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type projp(projpSEXP);
    Rcpp::traits::input_parameter< const Rcpp::String >::type hiv_strat(hiv_stratSEXP);
    Rcpp::traits::input_parameter< const int >::type hiv_steps_per_year(hiv_steps_per_yearSEXP);
    rcpp_result_gen = Rcpp::wrap(leapfrogR(demp, projp, hiv_strat, hiv_steps_per_year));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_leapfrog_leapfrogR", (DL_FUNC) &_leapfrog_leapfrogR, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_leapfrog(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
